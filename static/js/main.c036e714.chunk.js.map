{"version":3,"sources":["actions/browser/actions.js","reducers/browserReducer.js","actions/forecast/actions.js","reducers/forecastReducer.js","reducers/index.js","actions/fetchResults/actions.js","store/enhance.js","actions/browser/actionCreators.js","actions/forecast/actionCreators.js","actions/fetchResults/actionCreators.js","api/index.js","sagas/index.js","store/index.js","components/DayForecast.js","utils/index.js","components/Preloader.js","layouts/Home.js","layouts/Settings.js","layouts/NotFound.js","components/Header.js","components/ErrorComponent.js","App.js","serviceWorker.js","index.js"],"names":["GET_BROWSER_GEO","browserState","fetching","FETCH_FORECAST","forecastState","units","reducer","combineReducers","browserGeo","state","arguments","length","undefined","_ref","type","payload","Object","objectSpread","error","lat","lon","forecast","composeEnhancers","compose","setGeo","positions","storeForecast","changeUnits","unit","successFetch","fetchError","api","queryParams","url","query","format","oauth","oauth_consumer_key","oauth_nonce","Math","random","toString","substring","oauth_signature_method","oauth_timestamp","parseInt","Date","getTime","oauth_version","merged","merged_arr","keys","sort","map","k","encodeURIComponent","signature_base_str","method","join","composite_key","signature","CryptoJS","HmacSHA1","enc","Base64","auth_header","URLparams","URLSearchParams","entries","fetchParams","headers","Authorization","X-Yahoo-App-Id","Promise","resolve","axios","get","concat","then","res","data","getBrowserGeo","getForecast","sagaWather","rootSaga","getGeo","reject","navigator","geolocation","getCurrentPosition","location","_positions$coords","latitude","longitude","regenerator_default","a","wrap","_context","prev","next","call","sent","coords","put","t0","message","stop","_marked","action","_context2","_marked2","_context3","takeEvery","_marked3","_context4","all","_marked4","sagaMiddleware","createSagaMiddleware","DayForecast","timestamp","react_default","createElement","className","high","text","date","toLocaleString","weekday","month","day","formatDate","defaultProps","connect","Preloader","id","width","viewBox","fill","stroke","strokeWidth","d","Home","geo","isFetching","forecasts","useEffect","u","city","components_Preloader","forecastItem","components_DayForecast","key","dispatch","position","toggleUnits","Settings","resetGeo","onClick","NotFound","Header","react_router_dom","to","ErrorComponent","history","createBrowserHistory","App","fetchGeo","geoError","forecastError","Fragment","react_router","components_Header","components_ErrorComponent","path","exact","component","layouts_Home","isForecastFetching","Boolean","window","hostname","match","store","enhancers","enhance","applyMiddleware","createStore","run","configureStore","ReactDOM","render","es","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c036e714.chunk.js","sourcesContent":["export const GET_BROWSER_GEO = 'GET_BROWSER_GEO';\r\nexport const SET_GEO = 'SET_GEO';\r\nexport const CLEAR_GEO = 'CLEAR_GEO';\r\n","import { SET_GEO, CLEAR_GEO,  } from './../actions/browser/actions';\r\nimport {FETCH_ERROR, SUCCESS_FETCH} from './../actions/fetchResults/actions'\r\n\r\nconst browserState = {fetching: true};\r\n\r\nexport const browserGeo = (state = browserState, {type, payload}) => {\r\n  switch (type) {\r\n    case SET_GEO:\r\n      return {\r\n        ...state,\r\n        ...payload\r\n      }\r\n    case FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        fetching: false\r\n      }\r\n    case CLEAR_GEO:\r\n      return {\r\n        ...state,\r\n        lat: '',\r\n        lon: '',\r\n        fetching: true\r\n      }\r\n    case SUCCESS_FETCH:\r\n      return {\r\n        ...state,\r\n        fetching: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const FETCH_FORECAST = 'FETCH_FORECAST';\r\nexport const STORE_FORECAST = 'STORE_FORECAST';\r\nexport const CHANGE_UNITS = 'CHANGE_UNITS';\r\n","import { STORE_FORECAST, CHANGE_UNITS, } from './../actions/forecast/actions';\r\nimport { SUCCESS_FETCH, FETCH_ERROR } from './../actions/fetchResults/actions';\r\n\r\nconst forecastState = {\r\n  units: 'c',\r\n  fetching: true\r\n};\r\n\r\nexport const forecast = (state = forecastState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        fetching: false\r\n      }\r\n    case STORE_FORECAST:\r\n      return {\r\n        ...state,\r\n        ...payload\r\n      }\r\n    case CHANGE_UNITS:\r\n      return {\r\n        ...state,\r\n        units: payload,\r\n        fetching: true\r\n      }\r\n    case SUCCESS_FETCH:\r\n      return {\r\n        ...state,\r\n        fetching: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport {browserGeo} from \"./browserReducer\";\r\nimport {forecast} from \"./forecastReducer\";\r\n\r\nexport const reducer = combineReducers({\r\n  browserGeo,\r\n  forecast\r\n})\r\n","export const SUCCESS_FETCH = 'SUCCESS_FETCH';\r\nexport const FETCH_ERROR = 'FETCH_ERROR';\r\n","import { compose } from 'redux';\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== 'production' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nexport default composeEnhancers;\r\n","import { CLEAR_GEO, GET_BROWSER_GEO, SET_GEO } from \"./actions\";\r\n\r\nexport const getGeo = () => ({\r\n  type: GET_BROWSER_GEO,\r\n})\r\n\r\nexport const setGeo = positions => ({\r\n  type: SET_GEO,\r\n  payload: positions\r\n})\r\n\r\nexport const clearLocation = () => ({\r\n  type: CLEAR_GEO,\r\n})\r\n","import { CHANGE_UNITS, FETCH_FORECAST, STORE_FORECAST } from \"./actions\";\r\n\r\nexport const fetchForecast = query => ({\r\n  type: FETCH_FORECAST,\r\n  payload: query\r\n})\r\n\r\nexport const storeForecast = forecast => ({\r\n  type: STORE_FORECAST,\r\n  payload: forecast\r\n})\r\n\r\nexport const changeUnits = unit => ({\r\n  type: CHANGE_UNITS,\r\n  payload: unit\r\n})\r\n","import { FETCH_ERROR, SUCCESS_FETCH } from \"./actions\";\r\n\r\nexport const successFetch = () => ({\r\n  type: SUCCESS_FETCH,\r\n  payload: false\r\n})\r\n\r\nexport const fetchError = error => ({\r\n  type: FETCH_ERROR,\r\n  payload: error\r\n})\r\n","import CryptoJS from 'crypto-js';\r\nimport axios from 'axios';\r\n\r\nexport const api = (queryParams) => {\r\n  const url = 'https://weather-ydn-yql.media.yahoo.com/forecastrss';\r\n  const method = 'GET';\r\n  const app_id = 'hRQ8Gy52';\r\n  const consumer_key = 'dj0yJmk9ZTNuazJlN0hienFOJnM9Y29uc3VtZXJzZWNyZXQmc3Y9MCZ4PWM3';\r\n  const consumer_secret = '6b83f715469297ccd168e70b878ee2dbe2a54ee9';\r\n  const concat = '&';\r\n  const query = {\r\n    ...queryParams,\r\n    'format': 'json'\r\n  };\r\n  const oauth = {\r\n    'oauth_consumer_key': consumer_key,\r\n    'oauth_nonce': Math.random().toString(36).substring(2),\r\n    'oauth_signature_method': 'HMAC-SHA1',\r\n    'oauth_timestamp': parseInt(new Date().getTime() / 1000).toString(),\r\n    'oauth_version': '1.0'\r\n  };\r\n\r\n  const merged = { ...query, ...oauth };\r\n  const merged_arr = Object.keys(merged).sort().map(function (k) {\r\n    return [k + '=' + encodeURIComponent(merged[k])];\r\n  });\r\n\r\n  const signature_base_str = method\r\n    + concat + encodeURIComponent(url)\r\n    + concat + encodeURIComponent(merged_arr.join(concat));\r\n\r\n  const composite_key = encodeURIComponent(consumer_secret) + concat;\r\n  const hash = CryptoJS.HmacSHA1(signature_base_str, composite_key);\r\n  const signature = hash.toString(CryptoJS.enc.Base64);\r\n\r\n  oauth['oauth_signature'] = signature;\r\n  const auth_header = 'OAuth ' + Object.keys(oauth).map(function (k) {\r\n    return [k + '=\"' + oauth[k] + '\"'];\r\n  }).join(',');\r\n  const URLparams = new URLSearchParams(Object.entries(query))\r\n  const fetchParams = {\r\n    headers: {\r\n      'Authorization': auth_header,\r\n      'X-Yahoo-App-Id': app_id\r\n    }\r\n  }\r\n\r\n  return new Promise((resolve => resolve(axios.get(`${url}?${URLparams.toString()}`, fetchParams)))).then(res => res.data)\r\n}\r\n","import { call, put, takeEvery, all } from 'redux-saga/effects';\r\nimport { GET_BROWSER_GEO } from './../actions/browser/actions';\r\nimport { FETCH_FORECAST } from './../actions/forecast/actions';\r\nimport { setGeo } from './../actions/browser/actionCreators';\r\nimport { storeForecast } from './../actions/forecast/actionCreators';\r\nimport { successFetch, fetchError } from './../actions/fetchResults/actionCreators';\r\nimport { api } from '../api';\r\n\r\nconst getGeo = () => new Promise((resolve, reject) => {\r\n  navigator.geolocation.getCurrentPosition(\r\n    location => resolve(location),\r\n    error => reject(error),\r\n  )\r\n})\r\n\r\nfunction* getBrowserGeo() {\r\n  try{\r\n    const positions = yield call(getGeo);\r\n    const {latitude, longitude} = positions.coords;\r\n    yield put(setGeo({lat: latitude, lon: longitude}))\r\n  } catch (e) {\r\n    yield put(fetchError(e.message));\r\n  }\r\n\r\n}\r\n\r\nfunction* getForecast(action) {\r\n  try{\r\n    const forecast = yield call(api, action.payload);\r\n    yield put(storeForecast(forecast));\r\n    yield put(successFetch())\r\n  } catch (e) {\r\n    yield put(fetchError('Some error while getting forecast'));\r\n  }\r\n\r\n}\r\n\r\nfunction* sagaWather() {\r\n  yield takeEvery(GET_BROWSER_GEO, getBrowserGeo);\r\n  yield takeEvery(FETCH_FORECAST, getForecast);\r\n}\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    sagaWather(),\r\n  ])\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {reducer} from '../reducers';\r\nimport enhance from './enhance';\r\nimport {rootSaga} from '../sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default function configureStore() {\r\n\r\n  const enhancers = enhance(applyMiddleware(sagaMiddleware));\r\n  const store = createStore(reducer, enhancers);\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { formatDate, getDay } from '../utils';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DayForecast = ({ forecast, units }) => {\r\n  return (\r\n    <div className=\"forecast-item\">\r\n      <div className=\"forecast-temprature\">\r\n        <p className=\"forecast-temprature-data\">{forecast.high}&#176; {units}</p>\r\n        <p className=\"forecast-temprature-weather\">{forecast.text}</p>\r\n      </div>\r\n      <div className=\"forecast-date\">\r\n        <h5>{getDay(forecast.date)}</h5>\r\n        <p>{formatDate(forecast.date)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDayForecast.propTypes = {\r\n  forecast: PropTypes.object.isRequired,\r\n  units: PropTypes.string,\r\n};\r\n\r\nDayForecast.defaultProps = {\r\n  units: 'c'\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  units: state.forecast.units,\r\n})\r\n\r\nexport default connect(mapStateToProps)(DayForecast);\r\n","export const formatDate = timestamp => {\r\n  const d = new Date(timestamp * 1000);\r\n  const options = {\r\n    month: \"long\",\r\n    day: \"numeric\"\r\n  };\r\n  return d.toLocaleString(\"en\", options);\r\n}\r\n\r\nexport const getDay = timestamp => {\r\n  const d = new Date(timestamp * 1000);\r\n  const options = {\r\n    weekday: \"long\",\r\n  };\r\n  return d.toLocaleString(\"en\", options);\r\n}\r\n","import React from 'react';\r\n\r\nconst Preloader = () => (\r\n  <div className=\"preloader-layout\">\r\n    <div id=\"loader\">\r\n      <div className=\"cloud\">\r\n        <div className=\"cloud-base\">\r\n          <div className=\"cloud-small-part\"></div>\r\n          <div className=\"cloud-big-part\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sun\">\r\n        <div className=\"sun-beams1\"></div>\r\n        <div className=\"sun-beams2\"></div>\r\n        <div className=\"sun-beams3\"></div>\r\n        <div className=\"sun-beams4\"></div>\r\n        <div className=\"sun-beams5\"></div>\r\n        <div className=\"sun-beams6\"></div>\r\n      </div>\r\n      <div className=\"teardrops\">\r\n        <div className=\"teardrop1\">\r\n          <svg width=\"80%\" viewBox=\"0 0 30 42\">\r\n            <path fill=\"lightblue\" stroke=\"lightblue\" strokeWidth=\"1.5\"\r\n                  d=\"M15 3\r\n           Q16.5 6.8 25 18\r\n           A12.8 12.8 0 1 1 5 18\r\n           Q13.5 6.8 15 3z\"/>\r\n          </svg>\r\n        </div>\r\n        <div className=\"teardrop2\">\r\n          <svg width=\"80%\" viewBox=\"0 0 30 42\">\r\n            <path fill=\"lightblue\" stroke=\"lightblue\" strokeWidth=\"1.5\"\r\n                  d=\"M15 3\r\n           Q16.5 6.8 25 18\r\n           A12.8 12.8 0 1 1 5 18\r\n           Q13.5 6.8 15 3z\"/>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Preloader;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchForecast, changeUnits } from '../actions/forecast/actionCreators';\r\nimport DayForecast from '../components/DayForecast';\r\nimport Preloader from '../components/Preloader';\r\n\r\n\r\nconst Home = ({ geo, getForecast, forecast, units, isFetching }) => {\r\n  const { lat, lon } = geo;\r\n  const {location, forecasts} = forecast;\r\n  useEffect(() => {\r\n    isFetching && lat && lon && getForecast({\r\n      lat,\r\n      lon,\r\n      u: units\r\n    });\r\n  }, [getForecast, lat, lon, units, isFetching])\r\n\r\n  return (\r\n    <div className=\"forecast\">\r\n\r\n      <p>\r\n        Weather at <span>{location && location.city}</span>\r\n      </p>\r\n      {isFetching && <Preloader />}\r\n      <div className=\"forecast-list-wrapper\">\r\n        <div className=\"forecast-list\">\r\n          {!isFetching && forecasts && forecasts.length && forecasts.map(forecastItem => <DayForecast key={forecastItem.date} forecast={forecastItem} />)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nHome.propTypes = {\r\n  getForecast: PropTypes.func.isRequired,\r\n  geo: PropTypes.object,\r\n  forecast: PropTypes.object,\r\n  units: PropTypes.string,\r\n  isFetching: PropTypes.bool\r\n};\r\n\r\nHome.defaultProps = {\r\n  geo: {},\r\n  forecast: {},\r\n  units: 'c',\r\n  isFetching: true\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  geo: state.browserGeo,\r\n  forecast: state.forecast,\r\n  units: state.forecast.units,\r\n  isFetching: state.forecast.fetching || state.browserGeo.fetching,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getForecast: (position) => dispatch(fetchForecast(position)),\r\n  toggleUnits: (units) => dispatch(changeUnits(units))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeUnits } from '../actions/forecast/actionCreators';\r\nimport { clearLocation } from '../actions/browser/actionCreators';\r\n\r\nconst Settings = ({ units, toggleUnits, resetGeo }) => {\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settings-block\">\r\n        <p className=\"settings-title\">Units</p>\r\n        <div className=\"settings-units\">\r\n          <div onClick={() => toggleUnits('c')} className={units === 'c' ? 'active' : ''}>c</div>\r\n          <div onClick={() => toggleUnits('f')} className={units === 'f' ? 'active' : ''}>f</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"settings-block\">\r\n        <p className=\"settings-title\">System settings</p>\r\n        <button className=\"settings-reset\" onClick={resetGeo}>Reset Cache</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSettings.propTypes = {\r\n  toggleUnits: PropTypes.func.isRequired,\r\n  resetGeo: PropTypes.func.isRequired,\r\n  units: PropTypes.string,\r\n};\r\n\r\nSettings.defaultProps = {\r\n  units: 'c'\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  units: state.forecast.units\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleUnits: (units) => dispatch(changeUnits(units)),\r\n  resetGeo: () => dispatch(clearLocation())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <div>NotFound</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"menu\">\r\n      <Link to=\"/\">\r\n        <h1>The best Weather Forecast we ever made</h1>\r\n      </Link>\r\n      <Link to=\"/settings\">\r\n        <i className=\"fas fa-cog\" />\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ErrorComponent = ({message}) => (\r\n  <div className=\"error-block\">\r\n    <p>{message}</p>\r\n  </div>\r\n)\r\n\r\nErrorComponent.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ErrorComponent;\r\n","import React, { useEffect } from 'react';\r\nimport { Router, Switch, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Home, Settings, NotFound } from './layouts';\r\nimport Header from './components/Header';\r\nimport { getGeo } from \"./actions/browser/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorComponent from './components/ErrorComponent';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = ({ fetchGeo, geo, geoError, forecastError }) => {\r\n  const { lat, lon } = geo;\r\n  useEffect(() => {\r\n\r\n    !lat && !lon && fetchGeo()\r\n  }, [\r\n    fetchGeo,\r\n    lat,\r\n    lon,\r\n  ]);\r\n\r\n  const RootComponent = () => (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={() => forecastError ? <ErrorComponent message={forecastError}/> : <Home />}/>\r\n      <Route path=\"/settings\" component={Settings}/>\r\n      <Route path=\"*\" component={NotFound}/>\r\n    </Switch>\r\n  )\r\n\r\n  return (\r\n    <>\r\n\r\n      <Router history={history}>\r\n        <Header/>\r\n        {geoError ? <ErrorComponent message={geoError}/> : <RootComponent />}\r\n\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  fetchGeo: PropTypes.func.isRequired,\r\n  geo: PropTypes.object,\r\n  geoError: PropTypes.string,\r\n  forecastError: PropTypes.string\r\n};\r\n\r\nApp.defaultProps = {\r\n  geo: {},\r\n  geoError: '',\r\n  forecastError: ''\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  geo: state.browserGeo,\r\n  isForecastFetching: state.forecast.fetching,\r\n  geoError: state.browserGeo.error,\r\n  forecastError: state.browserGeo.error\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchGeo: () => dispatch(getGeo())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './assets/scss/style.scss';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}